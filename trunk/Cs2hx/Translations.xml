<?xml version="1.0" encoding="utf-8" ?>
<Translations>
  <Method SourceObject="*" Match="ToString" ReplaceWith="toString" />

  <Method SourceObject="System.String" Match="IndexOf" ReplaceWith="indexOf" />
  <Method SourceObject="System.String" Match="LastIndexOf" ReplaceWith="lastIndexOf" />
  <Method SourceObject="System.String" Match="Substring" ReplaceWith="substr" />
  <Method SourceObject="System.String" Match="Split" ReplaceWith="Split" ExtensionNamespace="system.Cs2Hx" />
  <Method SourceObject="System.String" Match="Replace" ReplaceWith="replace" />
  <Method SourceObject="System.String" Match="ToLower" ReplaceWith="toLowerCase" />
  <Method SourceObject="System.String" Match="ToUpper" ReplaceWith="toUpperCase" />
  <Method SourceObject="System.String" Match="StartsWith" ExtensionNamespace="system.Cs2Hx" />
  <Method SourceObject="System.String" Match="EndsWith" ExtensionNamespace="system.Cs2Hx" />
  <Method SourceObject="System.String" Match="Trim" ExtensionNamespace="system.Cs2Hx" />
  <Method SourceObject="System.String" Match="IsNullOrEmpty" ExtensionNamespace="system.Cs2Hx" SkipExtensionParameter="true" />
  <Method SourceObject="System.String" Match="Join" ExtensionNamespace="system.Cs2Hx" SkipExtensionParameter="true" />
  <Property SourceObject="System.String" Match="Length" ReplaceWith="length" />
  
  <Method SourceObject="System.Char" Match="IsLetterOrDigit" ExtensionNamespace="system.Cs2Hx" SkipExtensionParameter="true" />
  <Method SourceObject="System.Char" Match="IsDigit" ExtensionNamespace="system.Cs2Hx" SkipExtensionParameter="true" />

  <Property SourceObject="System.Collections.Generic.Queue" Match="Count" ReplaceWith="length" />
  <Method SourceObject="System.Collections.Generic.Queue" Match="Enqueue" ReplaceWith="push" />
  <Method SourceObject="System.Collections.Generic.Queue" Match="Dequeue" ReplaceWith="shift" />
  <Method SourceObject="System.Collections.Generic.Queue" Match="Peek" ReplaceWith="First" ExtensionNamespace="system.linq.Linq" />
  <Method SourceObject="System.Collections.Generic.Queue" Match=".ctor">
    <Argument Location="0" Action="DeleteIfPresent" />
  </Method>
  <Method SourceObject="System.Collections.Generic.Queue" Match="Clear" ReplaceWith="splice">
    <Argument Location="0" Action="Insert 0" />
    <Argument Location="1" Action="Insert {varName}.length" />
  </Method>

  <Method SourceObject="System.Array" Match="Sort" ReplaceWith="sort" />
  <Property SourceObject="System.Array" Match="Length" ReplaceWith="length" />

  <Property SourceObject="System.Collections.Generic.Dictionary" Match="Count" ReplaceWith="length" />
  <Property SourceObject="System.Collections.Generic.Dictionary.KeyCollection" Match="Count" ReplaceWith="length" />
  <Property SourceObject="System.Collections.Generic.Dictionary.ValueCollection" Match="Count" ReplaceWith="length" />

  <Property SourceObject="System.Collections.Generic.HashSet" Match="Count" ReplaceWith="length" />


  <Property SourceObject="System.Collections.Generic.List" Match="Count" ReplaceWith="length" />
  <Property SourceObject="System.Collections.Generic.IList" Match="Count" ReplaceWith="length" />
  <Method SourceObject="System.Collections.Generic.List" Match="Reverse" ReplaceWith="reverse" />
  <Method SourceObject="System.Collections.Generic.List" Match="Contains" ReplaceWith="Contains" ExtensionNamespace="system.Cs2Hx" />
  <Method SourceObject="System.Collections.Generic.List" Match="ToArray" ReplaceWith="ToArray" ExtensionNamespace="system.Cs2Hx" />
  <Method SourceObject="System.Collections.Generic.List" Match="Add" ReplaceWith="push" />
  <Method SourceObject="System.Collections.Generic.List" Match="Clear" ReplaceWith="splice">
    <Argument Location="0" Action="Insert 0" />
    <Argument Location="1" Action="Insert {varName}.length" />
  </Method>
  <Method SourceObject="System.Collections.Generic.List" Match="Sort" ReplaceWith="sort" />
  <Method SourceObject="System.Collections.Generic.List" Match="Insert" ReplaceWith="insert" />
  <Method SourceObject="System.Collections.Generic.List" Match="IndexOf" ExtensionNamespace="system.Cs2Hx" />
  <Method SourceObject="System.Collections.Generic.List" Match="RemoveRange" ReplaceWith="splice" />
  <Method SourceObject="System.Collections.Generic.List" Match="Remove" ReplaceWith="remove" />
  <Method SourceObject="*" Match="RemoveAt" ReplaceWith="splice">
    <Argument Location="1" Action="Insert 1" />
  </Method>
  <Method SourceObject="System.Collections.Generic.List" Match=".ctor">
    <Argument Location="0" Action="DeleteIfPresent" />
  </Method>

  <Method SourceObject="System.Collections.Generic.Stack" Match="Push" ReplaceWith="push" />
  <Method SourceObject="System.Collections.Generic.Stack" Match="Pop" ReplaceWith="pop" />
  <Method SourceObject="System.Collections.Generic.Stack" Match=".ctor">
    <Argument Location="0" Action="DeleteIfPresent" />
  </Method>

  <Method SourceObject="System.Linq.Enumerable" Match="Contains" ReplaceWith="Contains" ExtensionNamespace="system.Cs2Hx" />

  <Method SourceObject="System.Linq.Enumerable" Match="OfType">
    <Argument Location="0" Action="Insert {genericType}" />
  </Method>
  
  <Method SourceObject="System.Math" Match="Max" ArgumentTypes="int int" ReplaceWith="MaxInt" ExtensionNamespace="system.Cs2Hx" SkipExtensionParameter="true" />
  <Method SourceObject="System.Math" Match="Max" ReplaceWith="max" />
  <Method SourceObject="System.Math" Match="Min" ArgumentTypes="int int" ReplaceWith="MinInt" ExtensionNamespace="system.Cs2Hx" SkipExtensionParameter="true" />
  <Method SourceObject="System.Math" Match="Min" ReplaceWith="min" />
  <Method SourceObject="System.Math" Match="Abs" ArgumentTypes="int" ReplaceWith="AbsInt" ExtensionNamespace="system.Cs2Hx" SkipExtensionParameter="true" />
  <Method SourceObject="System.Math" Match="Abs" ReplaceWith="abs" />
  <Method SourceObject="System.Math" Match="Sqrt" ReplaceWith="sqrt" />
  <Method SourceObject="System.Math" Match="Atan" ReplaceWith="atan" />
  <Method SourceObject="System.Math" Match="Atan2" ReplaceWith="atan2" />
  <Method SourceObject="System.Math" Match="Cos" ReplaceWith="cos" />
  <Method SourceObject="System.Math" Match="Sin" ReplaceWith="sin" />
  <Method SourceObject="System.Math" Match="Log" ReplaceWith="log" />
  <Method SourceObject="System.Math" Match="Exp" ReplaceWith="exp" />

  <Type Match="System.Random" SourceObject="*" ReplaceWith="RandomAS" />
  <Type Match="System.MulticastDelegate" SourceObject="*" ReplaceWith="Dynamic" />
  <Type Match="System.Guid" SourceObject="*" ReplaceWith="String" />
  
  <!--Haxe can't deal with multiple types having the same name, such as System.Enumerable and System.Linq.Enumerable. So let's rename the latter. -->
  <ExtensionType Match="System.Linq.Enumerable" ReplaceWith="System.Linq.Linq" />
</Translations>
